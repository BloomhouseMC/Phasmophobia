plugins {
    id 'java'
    id 'maven-publish'
    id 'fabric-loom' version '0.9-SNAPSHOT'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'fabric-loom'

    group = project.maven_group
    version = project.mod_version
    archivesBaseName = "${project.mod_id}-mc${project.minecraft_version}"

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_16

    // Declare dependencies
    dependencies {
        // Fabric
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Mods
        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
        modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"

        // Code Quality
        compileOnly "org.jetbrains:annotations:${project.jetbrains_annotations_version}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_jupiter_version}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit_jupiter_version}"

        modImplementation "io.github.ladysnake:satin:${satin_version}"
        // Include Satin as a Jar-in-Jar dependency (optional)
        include "io.github.ladysnake:satin:${satin_version}"
    }


    // Produce a sources distribution
    java {
        withSourcesJar()
    }

    // Add the licence to all distributions
    tasks.withType(Jar).configureEach {
        it.from rootProject.file('LICENCE.txt')
    }

    // Process any resources
    processResources {
        inputs.property 'id', project.mod_id
        inputs.property 'name', project.mod_name
        inputs.property 'version', project.version

        // fabric.mod.json
        filesMatching('fabric.mod.json') {
            expand(['id': project.mod_id, 'name': project.mod_name, 'version': project.version])
        }
    }

    // Add any additional repositories
    repositories {
        mavenCentral()
        maven { name 'Fabric'; url 'https://maven.fabricmc.net/' }
        maven { name 'TerraformersMC'; url 'https://maven.terraformersmc.com/' }
        maven {
            name = 'Ladysnake Mods'
            url = 'https://ladysnake.jfrog.io/artifactory/mods'
            content {
                includeGroup 'io.github.ladysnake'
                includeGroupByRegex 'io\\.github\\.onyxstudios.*'
            }
        }
    }
}

// Define how packages are published
publishing {
    // Declare all publications
    publications {
        mavenJava(MavenPublication) {
            // Main
            artifact(remapJar) { builtBy remapJar }
            // Sources
            artifact(sourcesJar) { builtBy remapSourcesJar }
        }
    }

    // Add repositories to publish to
    repositories {
        // GitHub Packages (https://pkg.github.com)
        maven {
            name 'GitHub'
            url "https://maven.pkg.github.com/${project.github_repo}"
            credentials {
                username System.getenv('GITHUB_ACTOR')
                password System.getenv('GITHUB_TOKEN')
            }
        }
    }
}

